@model ComputerGraphicsProject.Models.NewtonFractalModel;
<canvas id="newtonCanvas" width="@Model.FractalBitmapModel.Width" height="@Model.FractalBitmapModel.Height"></canvas>

<form asp-action="Newton">
    <div asp-validation-summary="ModelOnly" class="text-danger"></div>
    <div class="form-group">
        <label asp-for="realC" class="control-label">Real C</label>
        <input asp-for="realC" class="form-control" />
        <span asp-validation-for="realC" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="imaginaryC" class="control-label">Imaginary C</label>
        <input asp-for="imaginaryC" class="form-control" />
        <span asp-validation-for="imaginaryC" class="text-danger"></span>
    </div>
    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
    </div>
</form>
<script>
        var canvas = document.getElementById('newtonCanvas');
        
        var ctx = canvas.getContext('2d');
        var imageData = ctx.createImageData(canvas.width, canvas.height);
        console.log("start");
        var bitmapData = @Html.Raw(Json.Serialize(Model.FractalBitmapModel.Bitmap));
        console.log("middle");
        for (var y = 0; y < canvas.height; y++) {
            for (var x = 0; x < canvas.width; x++) {
                var index = (y * canvas.width + x) * 4;
                imageData.data[index] = bitmapData[index];
                imageData.data[index + 1] = bitmapData[index + 1];
                imageData.data[index + 2] = bitmapData[index + 2];
                imageData.data[index + 3] = 255; // Прозрачность 255 (непрозрачный)
            }
        }
        console.log("middle+");
        // Отобразите imageData на канвасе
        ctx.putImageData(imageData, 0, 0);

        console.log("end");
</script>